{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Vibration from \"react-native-web/dist/exports/Vibration\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport ResultImc from \"./ResultImc/\";\nimport styles from \"./style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Form() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      height = _useState2[0],\n      setHeight = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      weight = _useState4[0],\n      setWeight = _useState4[1];\n\n  var _useState5 = useState('Preencha o peso e altura'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageImc = _useState6[0],\n      setMessageImc = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      imc = _useState8[0],\n      setImc = _useState8[1];\n\n  var _useState9 = useState('Calcular'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      textButton = _useState10[0],\n      setTextButton = _useState10[1];\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      erroMessage = _useState12[0],\n      setErroMessage = _useState12[1];\n\n  function imcCalculator() {\n    var heightFormat = height.replace(',', '.');\n    return setImc((weight / (heightFormat * heightFormat)).toFixed(2));\n  }\n\n  function verificationImc() {\n    if (imc == null) {\n      Vibration.vibrate();\n      setErroMessage('Campo obrigatório');\n    }\n  }\n\n  function validationImc() {\n    if (weight != null && height != null) {\n      imcCalculator();\n      setHeight(null);\n      setWeight(null);\n      setMessageImc('Seu imc é igual: ');\n      setTextButton('Calcular Novamente');\n      setErroMessage(null);\n      return;\n    }\n\n    verificationImc();\n    setImc(null);\n    setTextButton('Calcular');\n    setMessageImc('Preencha com peso e altura');\n  }\n\n  return _jsxs(Pressable, {\n    onPress: Keyboard.dismiss,\n    style: styles.formContext,\n    children: [_jsxs(View, {\n      style: styles.form,\n      children: [_jsx(Text, {\n        style: styles.formLabel,\n        children: \"Altura\"\n      }), _jsx(Text, {\n        style: styles.erroMessage,\n        children: erroMessage\n      }), _jsx(TextInput, {\n        onChangeText: setHeight,\n        value: height,\n        placeholder: \"Ex. 1.75\",\n        keyboardType: \"numeric\",\n        style: styles.input\n      }), _jsx(Text, {\n        style: styles.formLabel,\n        children: \"Peso\"\n      }), _jsx(Text, {\n        style: styles.erroMessage,\n        children: erroMessage\n      }), _jsx(TextInput, {\n        onChangeText: setWeight,\n        value: weight,\n        placeholder: \"Ex. 78.10\",\n        keyboardType: \"numeric\",\n        style: styles.input\n      }), _jsx(TouchableOpacity, {\n        onPress: function onPress() {\n          validationImc();\n        },\n        style: styles.buttonCalculator,\n        children: _jsx(Text, {\n          style: styles.textButtonCalculator,\n          children: textButton\n        })\n      })]\n    }), _jsx(ResultImc, {\n      messageResultImc: messageImc,\n      resultImc: imc\n    })]\n  });\n}","map":{"version":3,"sources":["/media/vicscov/SCOVINO_HD/5_repository_laptop/projeto_react_native_one_bit_code/onebithealth/src/components/Form/index.js"],"names":["React","useState","ResultImc","styles","Form","height","setHeight","weight","setWeight","messageImc","setMessageImc","imc","setImc","textButton","setTextButton","erroMessage","setErroMessage","imcCalculator","heightFormat","replace","toFixed","verificationImc","Vibration","vibrate","validationImc","Keyboard","dismiss","formContext","form","formLabel","input","buttonCalculator","textButtonCalculator"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { \n    Text,\n    TextInput,\n    View,\n    TouchableOpacity,\n    Vibration,\n    Pressable,\n    Keyboard, \n    } from 'react-native';\nimport ResultImc from './ResultImc/';\nimport styles from './style'\n\nexport default function Form() {\n\n    const [height ,setHeight] = useState(null)\n    const [weight ,setWeight] = useState(null)\n    const [messageImc ,setMessageImc] = useState('Preencha o peso e altura')\n    const [imc ,setImc] = useState(null)\n    const [textButton ,setTextButton] = useState('Calcular')\n    const [erroMessage, setErroMessage] = useState(null)\n\n\n\n     function imcCalculator (){\n       let heightFormat = height.replace(',','.')\n        return setImc((weight / (heightFormat*heightFormat)).toFixed(2))\n     }\n\n     function verificationImc(){\n       if(imc == null){\n         Vibration.vibrate();\n         setErroMessage('Campo obrigatório')\n       }\n     }\n\n    function validationImc(){\n        if(weight != null && height != null){\n            imcCalculator()\n            setHeight(null)\n            setWeight(null)\n            setMessageImc('Seu imc é igual: ')\n            setTextButton('Calcular Novamente')\n            setErroMessage(null)\n            return\n        }\n        verificationImc()\n        setImc(null)\n        setTextButton('Calcular')\n        setMessageImc('Preencha com peso e altura')\n       \n        \n     }\n \n  return (\n    <Pressable onPress={Keyboard.dismiss} style={styles.formContext}>\n      <View style={styles.form}>\n      <Text style={styles.formLabel}>Altura</Text>\n      <Text style={styles.erroMessage}>{erroMessage}</Text>\n      <TextInput\n        onChangeText={setHeight}\n        value={height}\n        placeholder='Ex. 1.75'\n        keyboardType = 'numeric'\n        style={styles.input}\n      />\n      <Text style={styles.formLabel}>Peso</Text>\n      <Text style={styles.erroMessage}>{erroMessage}</Text>\n      <TextInput\n        onChangeText={setWeight}\n        value={weight}\n        placeholder='Ex. 78.10'\n        keyboardType = 'numeric'\n        style={styles.input}\n      \n      />\n      <TouchableOpacity\n        onPress={() => {\n          validationImc()\n        }}\n        style={styles.buttonCalculator}\n      >\n        <Text style={styles.textButtonCalculator}>{textButton}</Text>\n\n      </TouchableOpacity>\n      </View>\n      <ResultImc  messageResultImc={messageImc} resultImc={imc}/>\n    </Pressable>\n  );\n}"]},"metadata":{},"sourceType":"module"}